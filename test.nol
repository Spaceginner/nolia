fnc println |n: %str|
asm {
    syscall println
}

fnc add |a: %i64, b: %i64| -> %i64
asm {
    syscall add
}

fnc eq |a: %i64, b: %i64| -> %bool
asm {
    syscall equal
}


fnc not |b: %bool| -> %bool
asm {
    jump $invert true
    loadsysitem true_
    return
    $invert loadsysitem false_
}

fnc random_num || -> %i64 {
    4  // randomly selected by a dice roll
}

fnc entry || {
    let c: %i64 = random_num();

    #sel c {
        of random_num() {
            println("it is quite random...");
        }
        of 0 {
            println("it is zero!");
        }
        or else {
            println("idk");
        }
    };
}
