fnc println |n: %i64|
asm {
    syscall println
}

fnc add |a: %i64, b: %i64| -> %i64
asm {
    syscall add
}

fnc eq |a: %i64, b: %i64| -> %bool
asm {
    syscall eq
}


fnc not |b: %bool| -> %bool
asm {
    jump $invert true
    loadsysitem true_
    return
    $invert loadsysitem false_
}

fnc entry || {
    let c: %i64 = 0i64;

    #while not(eq(c, 5)) {
        c = add(c, 1);
        println(c);
    };
}
